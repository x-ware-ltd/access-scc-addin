Option Explicit
Option Compare Text

Private Type shellBrowseInfo32
    hwndOwner      As LongPtr
    pIDLRoot       As Long
    pszDisplayName As Long
    lpszTitle      As String
    ulFlags        As Long
    lpfnCallback   As LongPtr
    lParam         As Long
    iImage         As Long
End Type

Public Const MAXDWORD = &HFFFF

Private Declare PtrSafe Function GetShortPathName32 Lib "kernel32" Alias "GetShortPathNameA" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Private Declare PtrSafe Sub CoTaskMemFree32 Lib "ole32.dll" Alias "CoTaskMemFree" (ByVal hMem As LongPtr)
Private Declare PtrSafe Function SHBrowseForFolder32 Lib "shell32" Alias "SHBrowseForFolder" (lpbi As shellBrowseInfo32) As Long
Private Declare PtrSafe Function SHGetPathFromIDList32 Lib "shell32" Alias "SHGetPathFromIDList" (ByVal pidList As Long, ByVal lpBuffer As String) As Long
Private Declare PtrSafe Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As String) As Long
Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32" (ByVal pidList As Long, ByVal lpBuffer As String) As Long

Private Const OFN_READONLY = &H1
Private Const OFN_OVERWRITEPROMPT = &H2
Private Const OFN_HIDEREADONLY = &H4
Private Const OFN_NOCHANGEDIR = &H8
Private Const OFN_NOVALIDATE = &H100
Private Const OFN_ALLOWMULTISELECT = &H200
Private Const OFN_EXTENSIONDIFFERENT = &H400
Private Const OFN_PATHMUSTEXIST = &H800
Private Const OFN_FILEMUSTEXIST = &H1000
Private Const OFN_CREATEPROMPT = &H2000
Private Const OFN_SHAREAWARE = &H4000
Private Const OFN_NOREADONLYRETURN = &H8000
Private Const OFN_NOTESTFILECREATE = &H10000
Private Const OFN_NONETWORKBUTTON = &H20000
Private Const OFN_NOLONGNAMES = &H40000
Private Const OFN_EXPLORER = &H80000
Private Const OFN_NODEREFERENCELINKS = &H100000
Private Const OFN_LONGNAMES = &H200000
Private Const OFN_SHAREFALLTHROUGH = 2
Private Const OFN_SHARENOWARN = 1
Private Const OFN_SHAREWARN = 0

Private Const CDERR_GENERALCODES = &H0
Private Const CDERR_STRUCTSIZE = &H1
Private Const CDERR_INITIALIZATION = &H2
Private Const CDERR_NOTEMPLATE = &H3
Private Const CDERR_NOHINSTANCE = &H4
Private Const CDERR_LOADSTRFAILURE = &H5
Private Const CDERR_FINDRESFAILURE = &H6
Private Const CDERR_LOADRESFAILURE = &H7
Private Const CDERR_LOCKRESFAILURE = &H8
Private Const CDERR_MEMALLOCFAILURE = &H9
Private Const CDERR_MEMLOCKFAILURE = &HA
Private Const CDERR_NOHOOK = &HB
Private Const CDERR_REGISTERMSGFAIL = &HC

Private Const BIF_RETURNONLYFSDIRS = &H1
Private Const MAX_PATH = 260

Private Const WM_USER = &H400
Private Const BFFM_INITIALIZED = 1
Private Const BFFM_SELCHANGED = 2
Private Const BFFM_SETSTATUSTEXT = (WM_USER + 100)
Private Const BFFM_SETSELECTION = (WM_USER + 102)

Dim mstrCurrentDirectory As String

'************************************************
' Browse Folder Dialog
'
' Opens a Browse for Folder Dialog
'
' @version 1.00
' @param  Long    A handle to the calling form
' @param  String  The title of the dialog
' @param  Boolean Flag to set if the path should be returned back in short form (abcde~1)
' @param  String  Optional param to set the starting path when selecting a folder
' @return String  The selected folder
'************************************************
Function BrowseFolderDialog(ByVal hWndFrm As LongPtr, ByVal strTitle As String, ByVal blnShortPath As Boolean, Optional ByVal strStartPath As String = vbNullString) As String
  Dim lngNullTest As Long
  Dim lngIDList As Long, lngRes As Long
  Dim strFolder As String, strShortFolder As String
  Dim shBI As shellBrowseInfo32

  On Error GoTo BrowseFolderDialog_Err:

  If LenB(strStartPath) <> 0 Then
    mstrCurrentDirectory = strStartPath
  End If

  With shBI
    .hwndOwner = hWndFrm
    .lpszTitle = strTitle
    .ulFlags = BIF_RETURNONLYFSDIRS
    .lpfnCallback = GetAddressofFunction(AddressOf BrowseCallbackProc)
  End With

  lngIDList = SHBrowseForFolder32(shBI)
  If lngIDList Then
    strFolder = String$(MAX_PATH, 0)
    lngRes = SHGetPathFromIDList32(lngIDList, strFolder)
    Call CoTaskMemFree32(lngIDList)
    lngNullTest = InStr(strFolder, vbNullChar)
    If lngNullTest <> 0 Then
      strFolder = Left$(strFolder, lngNullTest - 1)
      If blnShortPath Then
        strShortFolder = Space$(260)
        lngRes = GetShortPathName32(strFolder, strShortFolder, 260)
        If lngRes <> 0 Then
          strFolder = strShortFolder
        Else
          strFolder = vbNullString
        End If
      End If
    End If
  End If

  BrowseFolderDialog = strFolder

BrowseFolderDialog_Exit:
  Exit Function

BrowseFolderDialog_Err:
  BrowseFolderDialog = vbNullString
  MsgBox "Error No: " & Err & vbNullString & "Description: " & Err.Description, vbExclamation + vbOKOnly, "BrowseFolderDialog"
  Resume BrowseFolderDialog_Exit

End Function

Private Function BrowseCallbackProc(ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal lp As Long, ByVal pData As Long) As Long
  Dim lngRet As Long
  Dim strBuffer As String

  On Error Resume Next
  
  Select Case uMsg
    Case BFFM_INITIALIZED
      Call SendMessage(hwnd, BFFM_SETSELECTION, 1, mstrCurrentDirectory)

    Case BFFM_SELCHANGED
      strBuffer = Space(MAX_PATH)

      lngRet = SHGetPathFromIDList(lp, strBuffer)
      If lngRet = 1 Then
        Call SendMessage(hwnd, BFFM_SETSTATUSTEXT, 0, strBuffer)
      End If

  End Select

  BrowseCallbackProc = 0

End Function

' This function allows you to assign a function pointer to a vaiable.
Private Function GetAddressofFunction(add As LongPtr) As LongPtr
  GetAddressofFunction = add
End Function